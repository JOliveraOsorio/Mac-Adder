import re
import os

# Define the path to files
config_file_path = "C:/Dot1x/ProgramFiles/MCTT/Config.xml"
key_file_path = "C:/Dot1x/ProgramFiles/MCTT/key.txt"
current_file_path = "C:/Dot1x/ProgramFiles/MCTT/Current.txt"
length_file_path = "C:/Dot1x/ProgramFiles/MCTT/Length.txt"
config_output_file_path = "C:/Dot1x/ProgramFiles/MCTT/Config.txt"
config1_output_file_path = "C:/Dot1x/ProgramFiles/MCTT/Config1.xml"

# Function to replace specific content in a file
def replace_content_in_file(file_path, old_content, new_content):
    with open(file_path, 'r') as file:
        data = file.read()
    
    data = data.replace(old_content, new_content)

    with open(file_path, 'w') as file:
        file.write(data)

# Function to import NPS configuration
def import_nps_configuration(file_path):
    # Implementation to import NPS configuration in Python
    pass

# Function to perform cleanup procedures
def cleanup_procedures():
    # Implementation of cleanup procedures in Python
    pass

# Function to generate MacKey
def generate_mac_key(mac):
    return f"|/-{mac}')"

# Main loop
while True:
    # Prompt user to enter the last four characters of the MAC address including the dash
    mac = input("Enter Last Four of Mac Including the Dash: ")

    # Check if the user wants to exit
    if mac.lower() == 'exit':
        break

    # Display help information
    if mac == "?":
        print("Currently in Section Code MCTT")
        print("Enter Mac Last Four with the Dash")
        print("Type Exit to return to Section Selector")
        continue

    elif len(mac) >= 3 and mac[2] != '-':
        print("Error: The third character must be a hyphen. Please try again.")
        continue

    else:
        # Generate the MacKey
        mac_key = generate_mac_key(mac)

        # Read the content of Current.txt
        with open(current_file_path, 'r') as file:
            current = file.read()

        # Create Length.txt with a substring of Current.txt
        length = current[:-2]

        # Combine Length and New content
        with open(config_output_file_path, 'r') as file:
            new_content = length + file.read()

        print("Content of Config.txt:", new_content)

        # Replace specific content in Config.xml using Current.txt and Config.txt, then save the result to Config1.xml
        replace_content_in_file(config_file_path, current, new_content)

        # Import the modified NPS configuration from Config1.xml
        import_nps_configuration(config1_output_file_path)

        # Start Cleanup Procedures
        cleanup_procedures()

        # Re-run the loop for further inputs
        continue
